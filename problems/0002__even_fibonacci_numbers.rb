#!/usr/env/bin ruby
# encoding: utf-8

# The Problem: https://projecteuler.net/problem=2
# ============================================================================
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.
# ----------------------------------------------------------------------------
# Published on: Friday, 19th October 2001, 06:00 pm
# Solved by   : 274458 users.
# ----------------------------------------------------------------------------

require File.dirname(File.dirname(__FILE__)) + '/lib/base.rb'

module ProjectEuler
  class Solution2 < BaseSolution

    def solve
      # set default query:
      n = @params[0].to_i
      n = n > 0 ? n : 4000000

      # solved:
      self.mark_as_solved

      # code:
      sum = 0; prev1 = prev2 = 1;
      nf  = 2
      while nf < n
        prev1 = prev2
        prev2 = nf
        sum += nf if nf % 2 == 0
        nf = prev1 + prev2
      end

      # solution:
      sum
    end
  end
end
