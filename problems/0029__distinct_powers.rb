#!/usr/env/bin ruby
# encoding: utf-8

# The Problem: https://projecteuler.net/problem=29
# ============================================================================
# Consider all integer combinations of a^b for 2<=a<=5 and 2<=b<=5:
# 2^2=4,  2^3=8,   2^4=16,  2^5=32
# 3^2=9,  3^3=27,  3^4=81,  3^5=243
# 4^2=16, 4^3=64,  4^4=256, 4^5=1024
# 5^2=25, 5^3=125, 5^4=625, 5^5=3125
# If they are then placed in numerical order, with any repeats removed, we get
# the following sequence of 15 distinct terms:
# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
# How many distinct terms are in the sequence generated by a^b for 2<=a<=100 and
# 2<=b<=100?
# ----------------------------------------------------------------------------
# Published on: Friday, 25th October 2002, 06:00 pm
# Solved by   : 47322 users.
# ----------------------------------------------------------------------------

require File.dirname(File.dirname(__FILE__)) + '/lib/base.rb'

module ProjectEuler
  class Solution29 < BaseSolution

    def solve
      # set default query:
      n = @params[0].to_i
      n = n > 0 ? n : 100

      # solved:
      self.mark_as_solved

      # code:
      arr = []
      (2..n).each do |i|
        (2..n).each do |k|
          power = i**k
          arr.push power unless arr.include? power
        end
      end

      # answer
      arr.count
    end
  end
end
